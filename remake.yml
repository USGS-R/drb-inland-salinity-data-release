include:
   - 1_spatial.yml
   - 2_observations.yml
   - 3_driver.yml
   - 4_predictions.yml

packages:
  - yaml
  - dplyr
  - tidyr
  - meddle # at least v0.0.12
  - readr
  - feather
  - rgdal
  - stringr
  - sf
  - sbtools
  - dssecrets
  - scipiper
  - tidyverse

sources:
  - src/sb_utils.R
  - src/sb_functions.R
  - src/spatial_functions.R

targets:
  all:
    depends:
      - 00_parent_sb_xml
      
#       - 01_spatial_sb_xml
#       - 01_spatial_sb_data
# #      - log/01_spatial_sb_data.csv
# 
#       - 02_observations_sb_data
#       - 02_observations_sb_xml
# #      - log/02_observations_sb_data.csv
# 
#       - 03_drivers_sb_xml
#       - 03_drivers_sb_data
# #      - log/03_drivers_sb_data.csv
# 
#       - 04_predictions_sb_xml
#       - 04_predictions_sb_data
#     - log/04_forecasts_sb_data.csv
#     - 04_inputs_sb_meteo

## PARENT ##
  ## Build xml for parent item and save to out_xml folder
  out_xml/00_parent.xml:
    command: render(
      filename = target_name,
      "in_text/text_SHARED.yml",
      "in_text/text_00_parent.yml",
      geospatial_area_metadata
      )
  
  ## Push parent metadata xml to sciencebase
  00_parent_sb_xml:
    command: sb_render_post_xml(
      sbid_00_parent,
      xml_file = I('00_parent.xml'),
      "in_text/text_SHARED.yml",
      "in_text/text_00_parent.yml",
      geospatial_area_metadata
      )
  
  ## Push parent metadata xml to sb via log file 
  ## Note: use this target only if you are having trouble seeing changes to sciencebase item 
  # log/00_parent_sb.csv:
  #   command: sb_replace_files(
  #     filename = target_name,
  #     sb_id = sbid_00_parent,
  #     sources = 'src/sb_utils.R',
  #     'out_xml/00_parent.xml')

## SPATIAL ## 
  ## Build metadata xml for spatial data and save locally to out_xml
  out_xml/01_spatial.xml:
    command: render(
      filename = target_name,
      "in_text/text_SHARED.yml",
      "in_text/text_01_spatial.yml",
      geospatial_area_metadata
      )

  ## Push spatial metadata to sciencebase
  01_spatial_sb_xml:
    command: sb_render_post_xml(
      sbid_01_spatial,
      xml_file = I('01_spatial.xml'),
      "in_text/text_SHARED.yml",
      "in_text/text_01_spatial.yml",
      geospatial_area_metadata
      )
  
  ## Push spatial data metadata to sciencebase
  01_spatial_sb_data:
    command: sb_replace_files(
      sb_id = sbid_01_spatial,
      "out_data/XX_geospatial_area_WG84.zip",
      geospatial_area_metadata
      )
      
  ### Push all spatial data + metadata xml to sb
  # log/01_spatial_sb_data.csv:
  #   command: sb_replace_files_log(
  #     filename = target_name,
  #     sb_id = sbid_01_spatial,
  #     sources = "src/sb_utils.R",
  #     "out_data/XX_geospatial_area_WG84.zip",
  #     "out_xml/01_spatial.xml")

## OBSERVATIONS ## 
  ## Build metadata xml for obs data and save locally to out_xml
  out_xml/02_observations.xml:
    command: render(
      filename = target_name,
      "in_text/text_SHARED.yml",
      "in_text/text_02_observations.yml",
      geospatial_area_metadata
      )
  
  ## Push obs data metadata to sciencebase
  02_observations_sb_xml:
    command: sb_render_post_xml(
      sbid_02_observations,
      xml_file = I('02_observations.xml'),
      "in_text/text_SHARED.yml",
      "in_text/text_02_observations.yml",
      geospatial_area_metadata
      )
      
  ## Push obs data to sciencebase
  02_observations_sb_data:
    command: sb_replace_files(
      sbid_02_observations,
      "out_data/XX_observations.zip",
      geospatial_area_metadata
      )
  
  ## Push all obs data + metadata xml to sb via log file 
  ## Note: use this target only if you are having trouble seeing changes to sciencebase item 
  # log/02_observations_sb_data.csv:
  #   command: sb_replace_files_log(
  #     filename = target_name,
  #     sb_id = sbid_02_observations,
  #     sources = "src/sb_utils.R",
  #     "out_data/XX_observations.zip",
  #     "out_xml/02_observations.xml")
 
## DRIVER ## 
  ## Build metadata xml for driver and save locally to out_xml
  out_xml/03_drivers.xml:
    command: render(
      filename = target_name,
      "in_text/text_SHARED.yml",
      "in_text/text_03_driver.yml",
      geospatial_area_metadata
      )
  
  ## Push driver metadata to sciencebase
  03_drivers_sb_xml:
    command: sb_render_post_xml(
      sbid_03_drivers,
      xml_file = I('03_drivers.xml'),
      "in_text/text_SHARED.yml",
      "in_text/text_03_driver.yml",
      geospatial_area_metadata
      )

  ## Push driver data to sciencebase
  03_drivers_sb_data:
    command: sb_replace_files(
      sbid_03_drivers,
      'out_data/XX_driver_data_1.zip',
      'out_data/XX_driver_data_2.zip',
      geospatial_area_metadata
      )
      
  ## Push all driver data + metadata xml to sb via log file 
  ## Note: use this target only if you are having trouble seeing changes to sciencebase item 
  # log/03_drivers_sb_data.csv:
  #   command: sb_replace_files_log(
  #     filename = target_name,
  #     sb_id = sbid_03_drivers,
  #     sources = 'src/sb_utils.R',
  #     out_data/XX_driver_data_1.zip',
  #     'out_data/XX_driver_data_2.zip',
  #     'out_xml/03_drivers.xml'
  #     )

## FORECASTS ## 
 ## Build metadata xml for forecasts and save locally to out_xml
  out_xml/04_predictions.xml:
    command: render(
      filename = target_name,
      "in_text/text_SHARED.yml",
      "in_text/text_04_predictions.yml",
      geospatial_area_metadata
      )

 ## Push forecasts metadata to sciencebase
  04_predictions_sb_xml:
    command: sb_render_post_xml(
      sbid_04_predictions,
      xml_file = I('04_predictions.xml'),
      "in_text/text_SHARED.yml",
      "in_text/text_04_predictions.yml",
       geospatial_area_metadata
       )
  
  ## Push forecasts data to sciencebase 
  04_predictions_sb_data:
    command: sb_replace_files(
      sbid_04_predictions,
      'out_data/XX_forecasts1.zip',
      'out_data/XX_forecasts2.zip'
      )

  ## Push all forecasts data + metadata xml to sb via log file 
  ## Note: use this target only if you are having trouble seeing changes to sciencebase item 
  # log/04_forecasts_sb_data.csv:
  #   command: sb_replace_files_log(
  #     filename = target_name,
  #     sb_id = sbid_04_forecasts,
  #     sources = 'src/sb_utils.R',
  #     'out_data/XX_forecasts1.zip',
  #     'out_data/XX_forecasts2.zip',
  #     'out_xml/04_forecasts.xml'
  #     )

  # ------ SB IDs --------

  sbid_00_parent:
    command: c(I('6365866cd34ebe442507d0c7')) # 6365866cd34ebe442507d0c7

  sbid_01_spatial:
    command: c(I('63658810d34ebe442507d0d0')) # 

  sbid_02_observations:
    command: c(I('6365882fd34ebe442507d0d3')) # 

  sbid_03_drivers:
    command: c(I('6365886bd34ebe442507d0d5')) #  

  sbid_04_predictions:
    command: c(I('6365887ad34ebe442507d0d7')) # 